name: Full Release Pipeline

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # ensure all tags & history are present
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # match your environment

      - run: yarn install --frozen-lockfile

      # 1️⃣ Calculate next version via dry-run
      - id: calc
        name: Calculate next semantic-release version
        run: |
          VERSION=$(npx semantic-release --dry-run --no-ci \
            | grep 'The next release version is' \
            | awk '{print $NF}')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      # 2️⃣ Bump package.json to that version
      - name: Bump to ${{ steps.calc.outputs.version }}
        run: |
          npm version ${{ steps.calc.outputs.version }} --no-git-tag-version
        env:
          CI: false

      # 3️⃣ Open & auto‑merge the PR
      - id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          branch: bump-to-${{ steps.calc.outputs.version }}
          title: "chore: bump to ${{ steps.calc.outputs.version }}"
          commit-message: ":bookmark: bump to ${{ steps.calc.outputs.version }}"
          body: "Automated bump to ${{ steps.calc.outputs.version }}"

      - uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
          merge-method: squash

  tag:
    name: Tag Release
    runs-on: ubuntu-latest
    needs: bump
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # ensure all tags & history are present 

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # match your environment 

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run semantic-release to create tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --no-ci :contentReference[oaicite:3]{index=3}

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          echo "tag_name=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT

  android-build:
    name: Android Build
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Web
        run: yarn build

      - name: Capacitor sync
        run: yarn cap sync android

      - name: Build Android APK
        run: |
          cd android
          chmod +x gradlew
          ./gradlew assembleRelease

      - name: Rename APK for Release
        run: |
          mv android/app/build/outputs/apk/release/app-release-unsigned.apk \
             android/app/build/outputs/apk/release/com.iris.app.apk

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.tag.outputs.tag_name }}
          name: Release ${{ needs.tag.outputs.tag_name }}
          files: android/app/build/outputs/apk/release/com.iris.app.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
